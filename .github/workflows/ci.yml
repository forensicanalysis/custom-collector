name: CI
on:
  push:
    branches: [ master ]
  pull_request:
  schedule:
    - cron:  '0 0 * * *'

jobs:

  lint:
    name: Lint custom-collector
    runs-on: ubuntu-latest
    steps:
      - name: Setup go 1.16
        uses: actions/setup-go@v3
        with: {go-version: '1.16'}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.31
          args: --verbose --config .github/.golangci.yml --enable gofmt --enable goimports

  zip-collector:
    name: zip-collector
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Setup go 1.16
        uses: actions/setup-go@v3
        with: {go-version: '1.16'}
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build zip-collector
        run: go build .
        working-directory: zip-collector
      - name: Build autoruns-collector
        run: |
          go generate
          go build .
        working-directory: autoruns-collector

      - name: Run zip-collector
        run: |
          ./zip-collector.exe
          cat *.log
        if: matrix.os == 'windows-latest'
        shell: bash
        working-directory: zip-collector

      - name: Move Binary
        run: |
          mkdir bin store
          mv zip-collector/zip-collector* bin
        shell: bash

      - name: Upload zip-collector
        uses: actions/upload-artifact@master
        with:
          name: zip-collector ${{ matrix.os }}
          path: bin
